/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Finance;

import Business.BeingHuman.FinanceOrganization;
import Business.EcoSystem;
import Business.Enterprise.BankDetails;
import Business.Enterprise.BeingHumanEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FinanceWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Panchi
 */
public class FinanceWorkAreaPanel extends javax.swing.JPanel {

    /**
     * Creates new form FinanceWorkAreaPanel
     */
    JPanel userProcessContainer;
    Enterprise enterprise;
    UserAccount userAccount;
    Organization organization;
    EcoSystem ecosystem;

    public FinanceWorkAreaPanel(JPanel userProcessContainer, UserAccount account, Organization organization, Enterprise enterprise, EcoSystem ecosystem) {
        initComponents();
        this.ecosystem = ecosystem;
        this.userProcessContainer = userProcessContainer;
        this.enterprise = enterprise;
        this.organization = organization;
        this.userAccount = account;
        populateTable();
    }

    
    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) financeJTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : ecosystem.getWorkQueue().getWorkRequestList()) {
            if (request instanceof FinanceWorkRequest) {
                FinanceWorkRequest pfReq = (FinanceWorkRequest) request;
                Object[] row = new Object[6];
                row[0] = pfReq;
                row[1] = pfReq.getSender();
                row[2] = pfReq.getReceiver() == null ? null : request.getReceiver().getPerson().getName();
                row[3] = pfReq.getStatus();
                row[4] = pfReq.getAmountCollected();
                row[5] = ecosystem.getNetworkList().getClass().getSimpleName();

                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        financeJTable = new javax.swing.JTable();
        assignMeButton = new javax.swing.JButton();
        acceptButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        financeJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "Sender", "Receiver", "Status", "Amount", "Network"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                true, false, false, true, true, true
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        financeJTable.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                financeJTableMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(financeJTable);
        if (financeJTable.getColumnModel().getColumnCount() > 0) {
            financeJTable.getColumnModel().getColumn(2).setHeaderValue("Receiver");
        }

        assignMeButton.setBackground(new java.awt.Color(255, 102, 102));
        assignMeButton.setText("Assign me");
        assignMeButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                assignMeButtonActionPerformed(evt);
            }
        });

        acceptButton.setBackground(new java.awt.Color(255, 102, 102));
        acceptButton.setText("Accept");
        acceptButton.setEnabled(false);
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(95, 95, 95)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 565, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(224, 224, 224)
                        .addComponent(assignMeButton)
                        .addGap(125, 125, 125)
                        .addComponent(acceptButton, javax.swing.GroupLayout.PREFERRED_SIZE, 106, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(120, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(49, 49, 49)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 103, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(61, 61, 61)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(assignMeButton)
                    .addComponent(acceptButton))
                .addContainerGap(300, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void assignMeButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_assignMeButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = financeJTable.getSelectedRow();
        int count = 0;

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first.");
        } else {

            FinanceWorkRequest request = (FinanceWorkRequest) financeJTable.getValueAt(selectedRow, 0);
            request.setStatus("Pending");
            request.setReceiver(userAccount);
            assignMeButton.setEnabled(false);
            acceptButton.setEnabled(true);
            populateTable();
        }

    }//GEN-LAST:event_assignMeButtonActionPerformed

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = financeJTable.getSelectedRow();
        int count = 0;

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select a row first.");
        } else {
            FinanceWorkRequest request = (FinanceWorkRequest) financeJTable.getValueAt(selectedRow, 0);
            request.setStatus("Collected");
            int amountCollected = request.getAmountCollected();
            int amountAvailable = 0;
            for (Network network : ecosystem.getNetworkList()) {
                for (Enterprise enterprise : network.getEnterpriseList().getEnterpriseList()) {
                    if (enterprise instanceof BeingHumanEnterprise) {
                        amountAvailable = ((BeingHumanEnterprise) enterprise).getAmountCollected();
                        amountAvailable = amountAvailable + amountCollected;
                        ((BeingHumanEnterprise) enterprise).setAmountCollected(amountAvailable);
                        JOptionPane.showMessageDialog(null, "Funds added to account");
                    }
                }
            }

        }
        populateTable();
    }//GEN-LAST:event_acceptButtonActionPerformed

    private void financeJTableMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_financeJTableMouseClicked
        // TODO add your handling code here:
        int selectedRow = financeJTable.getSelectedRow();
        FinanceWorkRequest request = (FinanceWorkRequest) financeJTable.getValueAt(selectedRow, 0);
        if(request.getStatus().equalsIgnoreCase("Sent")){
            assignMeButton.setEnabled(true);
            acceptButton.setEnabled(false);
        }
        else if(request.getStatus().equalsIgnoreCase("Pending")){
            assignMeButton.setEnabled(false);
            acceptButton.setEnabled(true);
        }
        else if(request.getStatus().equalsIgnoreCase("Completed")){
            assignMeButton.setEnabled(false);
            acceptButton.setEnabled(false);
        }
    }//GEN-LAST:event_financeJTableMouseClicked


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JButton assignMeButton;
    private javax.swing.JTable financeJTable;
    private javax.swing.JScrollPane jScrollPane1;
    // End of variables declaration//GEN-END:variables

}
