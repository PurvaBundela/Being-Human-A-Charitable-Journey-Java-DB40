/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.RecyclingTeam;

import Business.BeingHuman.FinanceOrganization;
import Business.EcoSystem;
import Business.Enterprise.BeingHumanEnterprise;
import Business.Enterprise.Enterprise;
import Business.Network.Network;
import Business.Organization.Organization;
import Business.PlasticConservation.RecyclingTeamOrganization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FinanceWorkRequest;
import Business.WorkQueue.RecyclingTeamWorkRequest;
import Business.WorkQueue.WorkRequest;
import java.util.Random;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tejesh
 */
public class RecyclingTeamWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form RecyclingTeamWorkAreaJPanel
     */
   private JPanel userProcessContainer;
    private Enterprise enterprise;
    private UserAccount userAccount;
    private RecyclingTeamOrganization recyclingTeamOrganization;
    private EcoSystem ecosystem;
    
    public RecyclingTeamWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, Organization organization, EcoSystem ecosystem) {
        initComponents();
        this.ecosystem = ecosystem;
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.enterprise = enterprise;
        this.recyclingTeamOrganization = (RecyclingTeamOrganization) organization;

        populateTable();
    }  
        
        public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) recyclingTeamJTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : ecosystem.getWorkQueue().getWorkRequestList()) {
            if (request instanceof RecyclingTeamWorkRequest) {
                RecyclingTeamWorkRequest req = (RecyclingTeamWorkRequest) request;
                Object[] row = new Object[5];
                row[0] = req;
                row[1] = req.getSender().getPerson().getName();
                row[2] = req.getLocation();
                row[3] = req.getStatus();
                row[4] = req.getReceiver() == null ? null : request.getReceiver().getPerson().getName();

                model.addRow(row);
            }
        }
    }


    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        recyclingTeamJTable = new javax.swing.JTable();
        acceptBtn = new javax.swing.JButton();
        transferFundsBtn = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        recyclingTeamJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "PCEmployee", "Location", "Status", "RecyclingTeam"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Object.class, java.lang.String.class, java.lang.Object.class, java.lang.String.class, java.lang.String.class
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }
        });
        jScrollPane1.setViewportView(recyclingTeamJTable);

        acceptBtn.setBackground(new java.awt.Color(255, 102, 102));
        acceptBtn.setText("Accept Request");
        acceptBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptBtnActionPerformed(evt);
            }
        });

        transferFundsBtn.setBackground(new java.awt.Color(255, 102, 102));
        transferFundsBtn.setText("Transfer Funds");
        transferFundsBtn.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                transferFundsBtnActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(134, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(131, 131, 131))
            .addGroup(layout.createSequentialGroup()
                .addGap(210, 210, 210)
                .addComponent(acceptBtn)
                .addGap(60, 60, 60)
                .addComponent(transferFundsBtn, javax.swing.GroupLayout.PREFERRED_SIZE, 121, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(41, 41, 41)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(acceptBtn)
                    .addComponent(transferFundsBtn))
                .addContainerGap(242, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void acceptBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = recyclingTeamJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the request to accept.");
        } else {

        RecyclingTeamWorkRequest request = (RecyclingTeamWorkRequest) recyclingTeamJTable.getValueAt(selectedRow, 0);
        request.setReceiver(userAccount);
        request.setStatus("Complete");
        request.setPlasticResult("Received Plastic..!!");
        populateTable();
        }
    }//GEN-LAST:event_acceptBtnActionPerformed

    private void transferFundsBtnActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_transferFundsBtnActionPerformed
        // TODO add your handling code here:
        int selectedRow = recyclingTeamJTable.getSelectedRow();
        int amountCollected;
        int count = 0;
        
        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the request for which the transfer should be initiated.");
        } else {
            RecyclingTeamWorkRequest request = (RecyclingTeamWorkRequest) recyclingTeamJTable.getValueAt(selectedRow, 0);
            FinanceWorkRequest pfWorkRequest = new FinanceWorkRequest();
            String employee = request.getSender().getUsername();
            pfWorkRequest.setMessage("The amount collected by "+employee);
            pfWorkRequest.setLocation(request.getLocation());
            pfWorkRequest.setSender(userAccount);
            pfWorkRequest.setStatus("Sent");
            Random rand = new Random();
            if(pfWorkRequest.getLocation().equalsIgnoreCase("Public place"))
                amountCollected = rand.nextInt(500-300)+300;
            else
                amountCollected = rand.nextInt(300-100)+100;
            pfWorkRequest.setAmountCollected(amountCollected);
            
            for (Network network : ecosystem.getNetworkList()){
                for (Enterprise enterprise : network.getEnterpriseList().getEnterpriseList()){
                    if(enterprise instanceof BeingHumanEnterprise){
                        for(Organization organization : enterprise.getOrganizationDirectory().getOrganizationList()){
                            if(organization instanceof FinanceOrganization){
                                count++;
                                break;
                            }
                        }
                    }
                }
            }
            if(count>0){
                ecosystem.getWorkQueue().getWorkRequestList().add(pfWorkRequest);
                userAccount.getWorkQueue().getWorkRequestList().add(pfWorkRequest);
                
            JOptionPane.showMessageDialog(null, "Funds collected from pastic recycle are transfered to Finance Team");
            }
        }
    }//GEN-LAST:event_transferFundsBtnActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptBtn;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable recyclingTeamJTable;
    private javax.swing.JButton transferFundsBtn;
    // End of variables declaration//GEN-END:variables
}
