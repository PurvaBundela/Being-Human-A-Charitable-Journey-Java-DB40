/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package userInterface.Orphanage;

import Business.EcoSystem;
import Business.Enterprise.Enterprise;
import Business.FoodConservation.OrphanageOrganization;
import Business.Organization.Organization;
import Business.UserAccount.UserAccount;
import Business.WorkQueue.FCWorkRequest;
import Business.WorkQueue.OrphanageWorkRequest;
import Business.WorkQueue.WorkRequest;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Tejesh
 */
public class OrphanageWorkAreaJPanel extends javax.swing.JPanel {

    /**
     * Creates new form OrphanageWorkAreaJPanel
     */
    JPanel userProcessContainer;
    Enterprise enterprise;
    UserAccount userAccount;
    OrphanageOrganization orphanageOrganization;
    EcoSystem ecosystem;

    public OrphanageWorkAreaJPanel(JPanel userProcessContainer, UserAccount account, Enterprise enterprise, Organization organization, EcoSystem ecosystem) {
        initComponents();
        this.ecosystem = ecosystem;
        this.userProcessContainer = userProcessContainer;
        this.userAccount = account;
        this.enterprise = enterprise;
        this.orphanageOrganization = (OrphanageOrganization) organization;

        populateTable();
    }

    public void populateTable() {
        DefaultTableModel model = (DefaultTableModel) orphanageJTable.getModel();

        model.setRowCount(0);

        for (WorkRequest request : ecosystem.getWorkQueue().getWorkRequestList()) {
            if (request instanceof OrphanageWorkRequest) {
                OrphanageWorkRequest req = (OrphanageWorkRequest) request;
                Object[] row = new Object[5];
                row[0] = req;
                row[1] = req.getSender().getPerson().getName();
                row[2] = req.getQuantity();
                row[3] = req.getStatus();
                row[4] = req.getReceiver() == null ? null : request.getReceiver().getPerson().getName();

                model.addRow(row);
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        orphanageJTable = new javax.swing.JTable();
        acceptButton = new javax.swing.JButton();

        setBackground(new java.awt.Color(255, 255, 255));

        orphanageJTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Message", "FCEmployee", "Quantity", "Status", "OrphanageStaff"
            }
        ));
        jScrollPane1.setViewportView(orphanageJTable);

        acceptButton.setBackground(new java.awt.Color(255, 102, 102));
        acceptButton.setText("Accept Request");
        acceptButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                acceptButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(this);
        this.setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap(128, Short.MAX_VALUE)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(120, 120, 120))
            .addGroup(layout.createSequentialGroup()
                .addGap(294, 294, 294)
                .addComponent(acceptButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(35, 35, 35)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 119, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(38, 38, 38)
                .addComponent(acceptButton)
                .addContainerGap(285, Short.MAX_VALUE))
        );
    }// </editor-fold>//GEN-END:initComponents

    private void acceptButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_acceptButtonActionPerformed
        // TODO add your handling code here:
        int selectedRow = orphanageJTable.getSelectedRow();

        if (selectedRow < 0) {
            JOptionPane.showMessageDialog(null, "Please select the request to accept.");
        } else {
            OrphanageWorkRequest request = (OrphanageWorkRequest) orphanageJTable.getValueAt(selectedRow, 0);
            request.setReceiver(userAccount);
            request.setStatus("Complete");
            request.setFoodResult("Received food..!!");
            populateTable();

        }
    }//GEN-LAST:event_acceptButtonActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton acceptButton;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable orphanageJTable;
    // End of variables declaration//GEN-END:variables
}
